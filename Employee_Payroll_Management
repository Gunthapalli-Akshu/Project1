#include <stdio.h>
#include <string.h>
#define MAX_EMPLOYEES 100
struct Employee
{
    int id;
    char name[50];
    float basicSalary;
    float hra;
    float da;
    float grossSalary;
};
void calculateGrossSalary(struct Employee *emp) 
{
    emp->grossSalary = emp->basicSalary + emp->hra + emp->da;
}
void addEmployee(struct Employee employees[], int *count)
{
    if (*count >= MAX_EMPLOYEES)
    {
        printf("Employee limit reached.\n");
        return;
    }
    struct Employee emp;
    printf("Enter Employee ID: ");
    scanf("%d", &emp.id);
    printf("Enter Employee Name: ");
    scanf(" %[^\n]s", emp.name);
    printf("Enter Basic Salary: ");
    scanf("%f", &emp.basicSalary);
    printf("Enter HRA: ");
    scanf("%f", &emp.hra);
    printf("Enter DA: ");
    scanf("%f", &emp.da);
    calculateGrossSalary(&emp);
    employees[*count] = emp;
    (*count)++;
    printf("Employee added successfully!\n");
}
void displayEmployees(struct Employee employees[], int count)
{
    if (count == 0)
    {
        printf("No employees to display.\n");
        return;
    }
    printf("\nEmployee Details:\n");
    printf("ID\tName\t\tBasic\tHRA\tDA\tGross\n");
    printf("--------------------------------------------------------\n");
    for (int i = 0; i < count; i++)
    {
        printf("%d\t%s\t\t%.2f\t%.2f\t%.2f\t%.2f\n", 
               employees[i].id, employees[i].name, employees[i].basicSalary,
               employees[i].hra, employees[i].da, employees[i].grossSalary);
    }
}
int main() 
{
    struct Employee employees[MAX_EMPLOYEES];
    int employeeCount = 0;
    int choice;
    do 
    {
        printf("\nEmployee Payroll Management System\n");
        printf("1. Add Employee\n");
        printf("2. Display Employees\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
            case 1:
                addEmployee(employees, &employeeCount);
                break;
            case 2:
                displayEmployees(employees, employeeCount);
                break;
            case 3:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } 
    while (choice != 3);
    return 0;
}
